using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Collections.Generic;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.Button;
using System.Diagnostics;
using System.Security.Policy;

namespace FakeMalware
{
    public partial class AddForm : Form
    {
        public AddForm()
        {
            InitializeComponent();
        }
        private bool dragging = false;
        private bool dragging1 = false;
        private Point dragCursorPoint;
        private Point dragFormPoint;

        private string[] name = new string[1000];
        private string[] image = new string[1000];
        private int[] r = new int[1000];
        private int[] g = new int[1000];
        private int[] b = new int[1000];
        private int[] mode = new int[1000];
        private int[] userinput = new int[1000];
        private int[] endtime = new int[1000];
        private string[] url = new string[1000];
        private int[] spawn = new int[1000];
        private string[] spawnwith = new string[1000];
        private string[] music = new string[1000];
        private int[] musicmode = new int[1000];
        private string[] cmdexe = new string[1000];
        bool editing = false;

        private void AddForm_Resize(object sender, EventArgs e)
        {
            top_panel.Width = this.Width;
            btnClose.Left = this.Width - 49;
            btnMaximalize.Left = this.Width - 99;
            btnMinimalize.Left = this.Width - 149;
            RightDownBox.Left = this.Width - 10;
            RightDownBox.Top = this.Height - 10;
            RoundBox2.Top = this.Height - 20;
            RoundBox3.Top = this.Height - 20;
            RoundBox3.Left = this.Width - 20;
        }

        private void AddForm_Load(object sender, EventArgs e)
        {
            if (Settings1.Default.Round == true)
            {
                RoundBox0.Visible = true;
                btnClose.BackgroundImage = Properties.Resources.btnCloseRound;
                RoundBox2.Visible = true;
                RoundBox3.Visible = true;
            }
            else { btnClose.BackgroundImage = Properties.Resources.btnClose; }

            for (int i = 0; i < 1000; i++)
                r[i] = 404;
        }

        private void btnClose_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnMaximalize_Click(object sender, EventArgs e)
        {
            if (WindowState == FormWindowState.Normal)
                this.WindowState = FormWindowState.Maximized;
            else
                this.WindowState = FormWindowState.Normal;
        }

        private void btnMinimalize_Click(object sender, EventArgs e)
        {
            this.WindowState = FormWindowState.Minimized;
        }

        private void top_panel_MouseDown(object sender, MouseEventArgs e)
        {
            dragging = true;
            dragCursorPoint = Cursor.Position;
            dragFormPoint = this.Location;
        }

        private void top_panel_MouseMove(object sender, MouseEventArgs e)
        {
            if (dragging)
            {
                Point dif = Point.Subtract(Cursor.Position, new Size(dragCursorPoint));
                this.Location = Point.Add(dragFormPoint, new Size(dif));
            }
        }

        private void top_panel_MouseUp(object sender, MouseEventArgs e)
        {
            dragging = false;
        }

        private void AddForm_MouseDown(object sender, MouseEventArgs e)
        {
            dragging1 = true;
        }

        private void AddForm_MouseMove(object sender, MouseEventArgs e)
        {
            if (dragging1)
            {
                Point dif1 = new Point(Cursor.Position.X - this.Location.X, Cursor.Position.Y - this.Location.Y);
                if (dif1.X >= 370)
                    this.Width = dif1.X;
                if (dif1.Y >= 370)
                    this.Height = dif1.Y;
            }
        }

        private void AddForm_MouseUp(object sender, MouseEventArgs e)
        {
            dragging1 = false;
        }

        private void RightBox_MouseMove(object sender, MouseEventArgs e)
        {
            if (dragging1)
            {
                Point dif1 = new Point(Cursor.Position.X - this.Location.X, Cursor.Position.Y - this.Location.Y);
                if (dif1.X >= 370)
                    this.Width = dif1.X;
            }
        }

        private void DownBox_MouseMove(object sender, MouseEventArgs e)
        {
            if (dragging1)
            {
                Point dif1 = new Point(Cursor.Position.X - this.Location.X, Cursor.Position.Y - this.Location.Y);
                if (dif1.Y >= 350)
                    this.Height = dif1.Y;
            }
        }

        private void ColorBox_Click(object sender, EventArgs e)
        {
            ColorDialog MyDialog = new ColorDialog();
            MyDialog.Color = ColorBox.BackColor;

            if (MyDialog.ShowDialog() == DialogResult.OK)
                ColorBox.BackColor = MyDialog.Color;
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            try
            {
                var data = new
                {
                    packname = PackBox.Text,
                    author = AuthorBox.Text,
                    folder = FolderBox.Text,
                    events = new List<dynamic>()
                };
                for (int i = 1; i < 1000 && name[i] != null; i++)
                {
                    dynamic cevent = new
                    {
                        name = name[i],
                        image = image[i],
                        R = r[i],
                        G = g[i],
                        B = b[i],
                        mode = mode[i],
                        userinput = userinput[i],
                        spawn = spawn[i],
                        spawnwith = spawnwith[i],
                        music = music[i],
                        musicmode = musicmode[i],
                        endtime = endtime[i],
                        url = url[i],
                        cmdexe = cmdexe[i]
                    };
                    data.events.Add(cevent);
                }
                string jsonData = JsonConvert.SerializeObject(data, Formatting.Indented);
                File.WriteAllText(Application.StartupPath + @"\" + PackBox.Text + ".json", jsonData);
                MessageBox.Show(PackBox.Text + ".json was saved!", "Fake Malware", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch
            {
                MessageBox.Show("Save error!", "Fake Malware", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void CountBox_ValueChanged(object sender, EventArgs e)
        {
            editing = true;
            //cleaning
            EventBox.Text = null;
            ImageBox.Text = null;
            TransCheckBox.Checked = false;
            ColorBox.BackColor = Color.Lime;
            SoundCheck.Checked = false;
            SoundBox.Text = null;
            SoundEffect.Text = null;
            EffectBox.Text = null;
            SpawnBox.Checked = true;
            SpawnCount.Value = 1;
            SpawnWithBox.Checked = false;
            SpawnNameBox.Text = null;
            SpawnNameBox.Items.Clear();
            for (int j = 1; j < CountBox.Value; j++)
                SpawnNameBox.Items.Add(name[j]);
            Close1.Checked = true;
            Close2.Checked = false;
            Close3.Checked = false;
            TimeBox.Value = 10;
            URLbox.Text = null;
            cmdexeBox.Text = null;
            //updating
            if (name[Convert.ToInt32(CountBox.Value)] == null && CountBox.Value != 1 && CountBox.Value != 1000)
                CountBox.Value--;

            int i = Convert.ToInt32(CountBox.Value);
            EventBox.Text = name[i];
            ImageBox.Text = image[i];
            if (r[i] != 404)
            {
                TransCheckBox.Checked = true;
                int tr = r[i];
                int tg = g[i];
                int tb = b[i];
                ColorBox.BackColor = Color.FromArgb(tr, tg, tb);
            }
            else
            {
                ColorBox.BackColor = Color.Lime;
                TransCheckBox.Checked = false;
            }
            if (music[i] != null)
            {
                SoundCheck.Checked = true;
                SoundBox.Text = music[i];
            }
            else
                SoundCheck.Checked = false;
            Close1.Checked = true;
            Close2.Checked = false;
            Close3.Checked = false;
            if (userinput[i] == 1)
                Close1.Checked = true;
            if (userinput[i] == 2)
            {
                Close2.Checked = true;
                TimeBox.Value = endtime[i];
                Close1.Checked = false;
            }
            if (userinput[i] == 3)
            {
                Close3.Checked = true;
                URLbox.Text = url[i];
                Close1.Checked = false;
            }
            if (mode[i] == 1)
                EffectBox.Text = "Show Fullscreen";
            if (mode[i] == 2)
                EffectBox.Text = "Randomly";
            if (mode[i] == 3)
                EffectBox.Text = "Randomly Teleporting";
            if (mode[i] == 4)
                EffectBox.Text = "Randomly botton";
            if (mode[i] == 5)
                EffectBox.Text = "Randomly top";
            if (mode[i] == 6)
                EffectBox.Text = "Randomly left";
            if (mode[i] == 7)
                EffectBox.Text = "Randomly right";
            if (mode[i] == 8)
                EffectBox.Text = "Randomly bouncing";
            if (mode[i] == 9)
                EffectBox.Text = "Moving from botton to top";
            if (mode[i] == 10)
                EffectBox.Text = "Moving from top to botton";
            if (mode[i] == 11)
                EffectBox.Text = "Moving from left to right";
            if (mode[i] == 12)
                EffectBox.Text = "Moving from right to left";
            if (spawn[i] == 1)
            {
                SpawnNameBox.Text = spawnwith[i];
                SpawnBox.Checked = false;
                SpawnWithBox.Checked = true;
            }
            else
            {
                if (spawn[i] > 0 && spawn[i] < 1000)
                    SpawnCount.Value = spawn[i];
                SpawnBox.Checked = true;
                SpawnWithBox.Checked = false;
            }
            if (cmdexe[i] != null)
            {
                cmdexeBox.Text = cmdexe[i];
                CommandCheck.Checked = true;
            }
            else
                CommandCheck.Checked = false;

            editing = false;
        }

        private void EventBox_TextChanged(object sender, EventArgs e)
        {
            if (editing == false)
            {
                int i = Convert.ToInt32(CountBox.Value);

                name[i] = EventBox.Text;
                image[i] = ImageBox.Text;
                if (TransCheckBox.Checked)
                {
                    r[i] = ColorBox.BackColor.R;
                    g[i] = ColorBox.BackColor.G;
                    b[i] = ColorBox.BackColor.B;
                }
                else
                    r[i] = 404;
                if (EffectBox.Text == "Show Fullscreen")
                    mode[i] = 1;
                if (EffectBox.Text == "Randomly")
                    mode[i] = 2;
                if (EffectBox.Text == "Randomly Teleporting")
                    mode[i] = 3;
                if (EffectBox.Text == "Randomly botton")
                    mode[i] = 4;
                if (EffectBox.Text == "Randomly top")
                    mode[i] = 5;
                if (EffectBox.Text == "Randomly left")
                    mode[i] = 6;
                if (EffectBox.Text == "Randomly right")
                    mode[i] = 7;
                if (EffectBox.Text == "Randomly bouncing")
                    mode[i] = 8;
                if (EffectBox.Text == "Moving from botton to top")
                    mode[i] = 9;
                if (EffectBox.Text == "Moving from top to botton")
                    mode[i] = 10;
                if (EffectBox.Text == "Moving from left to right")
                    mode[i] = 11;
                if (EffectBox.Text == "Moving from right to left")
                    mode[i] = 12;
                if (SpawnBox.Checked)
                    spawn[i] = Convert.ToInt32(SpawnCount.Value);
                else
                    spawn[i] = 1;
                if (SpawnWithBox.Checked)
                    spawnwith[i] = SpawnNameBox.Text;
                else
                    spawnwith[i] = null;
                if (SoundCheck.Checked)
                {
                    music[i] = SoundBox.Text;
                    if (SoundEffect.Text == "Once" || SoundEffect.Text == "")
                        musicmode[i] = 0;
                    else
                        musicmode[i] = 1;
                }
                else
                {
                    music[i] = null;
                }
                if (Close1.Checked)
                    userinput[i] = 1;
                if (Close2.Checked)
                {
                    userinput[i] = 2;
                    endtime[i] = Convert.ToInt32(TimeBox.Value);
                }
                if (Close3.Checked)
                {
                    userinput[i] = 3;
                    url[i] = URLbox.Text;
                }
                if (cmdexeBox.Text != "" && CommandCheck.Checked == true)
                    cmdexe[i] = cmdexeBox.Text;
                else
                    cmdexe[i] = null;
            }
        }

        private void NewBox_Click(object sender, EventArgs e)
        {
            if (EventBox.Text != "")
            {
                editing = true;
                EventBox.Text = null;
                ImageBox.Text = null;
                TransCheckBox.Checked = false;
                ColorBox.BackColor = Color.Lime;
                SoundCheck.Checked = false;
                SoundBox.Text = null;
                SoundEffect.Text = null;
                EffectBox.Text = null;
                SpawnBox.Checked = true;
                SpawnCount.Value = 1;
                SpawnWithBox.Checked = false;
                SpawnNameBox.Text = null;
                SpawnNameBox.Items.Clear();
                for (int j = 1; j < CountBox.Value; j++)
                    SpawnNameBox.Items.Add(name[j]);
                Close1.Checked = true;
                Close2.Checked = false;
                Close3.Checked = false;
                TimeBox.Value = 10;
                URLbox.Text = null;
                CommandCheck.Checked = false;
                cmdexeBox.Text = null;
                name[Convert.ToInt32(CountBox.Value) + 1] = "New Event";
                CountBox.Value += 1;
                editing = false;
            }
        }
    }
}
