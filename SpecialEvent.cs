using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Diagnostics;
using System.Media;

namespace FakeMalware
{
    public partial class SpecialEvent : Form
    {
        public SpecialEvent()
        {
            InitializeComponent();
        }
        public string Event { get; set; }
        public string Json { get; set; }
        public bool divisle = true;
        public int CanSpawn = 20;
        int mode;
        Random Rand = new Random();
        int SpeedX = 6, SpeedY = 6;
        string url;
        System.Media.SoundPlayer soundplayer = new System.Media.SoundPlayer();
        string cmd;

        private void closeForm()
        {
            Timer3.Stop();
            Timer8.Stop();
            Timer9.Stop();
            soundplayer.Stop();
            if (cmd != null)
            {
                System.Diagnostics.Process.Start("CMD.exe", cmd);
            }
            this.Close();
        }

        private void SpecialEvent_Load(object sender, EventArgs e)
        {
            try
            {
                string jsonContent = File.ReadAllText(Json);
                dynamic data = JsonConvert.DeserializeObject(jsonContent);
                foreach (dynamic item in data["events"])
                {
                    if (item["name"] == Event)
                    {
                        //transparent color
                        if (item["R"] != null && item["R"] != 404)
                        {
                            int r = item["R"];
                            int g = item["G"];
                            int b = item["B"];
                            this.TransparencyKey = System.Drawing.Color.FromArgb(r, g, b);
                        }
                        //sound
                        if (item["music"] != null)
                        {
                            soundplayer = new System.Media.SoundPlayer(Application.StartupPath + @"\" + data["folder"] + @"\" + item["music"]);
                            if (item["musicmode"] == 0)
                                soundplayer.Play();
                            if (item["musicmode"] == 1)
                                soundplayer.PlayLooping();
                        }
                        //spawn rules
                        if (item["spawn"] > 1 && divisle == true)
                        {
                            for (int i = 0; i < Convert.ToInt32(item["spawn"]); i++)
                            {
                                SpecialEvent se = new SpecialEvent();
                                se.Json = Json;
                                se.Event = Event;
                                se.divisle = false;
                                se.Show();
                            }
                        }
                        if (item["spawnwith"] != null && CanSpawn > 0)
                        {
                            CanSpawn--;
                            SpecialEvent se = new SpecialEvent();
                            se.Json = Json;
                            se.Event = item["spawnwith"];
                            se.divisle = false;
                            se.CanSpawn = CanSpawn;
                            se.Show();
                        }
                        //image
                        MainBox.Image = new Bitmap(Application.StartupPath + @"\" + data["folder"] + @"\" + item["image"]);
                        mode = item["mode"];
                        if (mode == 1)
                        {
                            this.Location = new Point(0, 0);
                            this.Height = Screen.PrimaryScreen.Bounds.Height;
                            this.Width = Screen.PrimaryScreen.Bounds.Width;
                            MainBox.SizeMode = PictureBoxSizeMode.StretchImage;
                        }
                        if (mode == 2)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(Rand.Next(0, Screen.PrimaryScreen.Bounds.Width - this.Width), Rand.Next(0, Screen.PrimaryScreen.Bounds.Height - this.Height));
                        }
                        if (mode == 3)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(Rand.Next(0, Screen.PrimaryScreen.Bounds.Width - this.Width), Rand.Next(0, Screen.PrimaryScreen.Bounds.Height - this.Height));
                            Timer3.Start();
                        }
                        //bottom top left right
                        if (mode == 4)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(Rand.Next(0, Screen.PrimaryScreen.Bounds.Width - this.Width), Screen.PrimaryScreen.Bounds.Height - this.Height);
                        }
                        if (mode == 5)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(Rand.Next(0, Screen.PrimaryScreen.Bounds.Width - this.Width), 0);
                        }
                        if (mode == 6)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(0, Rand.Next(0, Screen.PrimaryScreen.Bounds.Height - this.Height));
                        }
                        if (mode == 7)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(Screen.PrimaryScreen.Bounds.Width - this.Width, Rand.Next(0, Screen.PrimaryScreen.Bounds.Height - this.Height));
                        }
                        //bouncing
                        if (mode == 8)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            Timer8.Start();
                        }
                        //moving
                        if (mode == 9)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(Rand.Next(0, Screen.PrimaryScreen.Bounds.Width - this.Width), Screen.PrimaryScreen.Bounds.Height - this.Height);
                            SpeedY = -3;
                            SpeedX = 0;
                            Timer9.Start();
                        }
                        if (mode == 10)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(Rand.Next(0, Screen.PrimaryScreen.Bounds.Width - this.Width), 0);
                            SpeedY = 3;
                            SpeedX = 0;
                            Timer9.Start();
                        }
                        if (mode == 11)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(0, Rand.Next(0, Screen.PrimaryScreen.Bounds.Height - this.Height));
                            SpeedX = 3;
                            SpeedY = 0;
                            Timer9.Start();
                        }
                        if (mode == 12)
                        {
                            this.Height = MainBox.Image.Height;
                            this.Width = MainBox.Image.Width;
                            this.Location = new Point(Screen.PrimaryScreen.Bounds.Width - this.Width, Rand.Next(0, Screen.PrimaryScreen.Bounds.Height - this.Height));
                            SpeedX = -3;
                            SpeedY = 0;
                            Timer9.Start();
                        }
                        //user input
                        if (item["userinput"] == 1)
                        {
                            MainBox.Click += MainBox_Click;
                            MainBox.Cursor = Cursors.Hand;
                        }
                        if (item["userinput"] == 2)
                        {
                            EndTimer.Interval = item["endtime"] * 1000;
                            EndTimer.Start();
                        }
                        if (item["userinput"] == 3)
                        {
                            url = item["url"];
                            MainBox.Click += UrlBox_Click;
                            MainBox.Cursor = Cursors.Hand;
                        }
                        try
                        {
                            if (item["cmdexe"] != null)
                            {
                                cmd = item["cmdexe"];
                            }
                        } catch
                        {
                            //compatible for older version
                        }
                    }
                }
            }
            catch {
                closeForm();
            }
        }

        private void Timer3_Tick(object sender, EventArgs e)
        {
            this.Location = new Point(Rand.Next(0, Screen.PrimaryScreen.Bounds.Width - this.Width), Rand.Next(0, Screen.PrimaryScreen.Bounds.Height - this.Height));
        }

        private void Timer8_Tick(object sender, EventArgs e)
        {
            if (this.Width + this.Left >= Screen.PrimaryScreen.Bounds.Width)
                SpeedX = -6;
            if (this.Left <= 0)
                SpeedX = 6;
            if (this.Height + this.Top >= Screen.PrimaryScreen.Bounds.Height)
                SpeedY = -6;
            if (this.Top <= 0)
                SpeedY = 6;

            this.Left += SpeedX;
            this.Top += SpeedY;
        }

        private void Timer9_Tick(object sender, EventArgs e)
        {
            if (this.Width + this.Left > Screen.PrimaryScreen.Bounds.Width)
                closeForm();
            if (this.Left < 0)
                closeForm();
            if (this.Height + this.Top > Screen.PrimaryScreen.Bounds.Height)
                closeForm();
            if (this.Top < 0)
                closeForm();

            this.Left += SpeedX;
            this.Top += SpeedY;
        }

        private void EndTimer_Tick(object sender, EventArgs e)
        {
            closeForm();
        }

        private void MainBox_Click(object sender, EventArgs e)
        {
            closeForm();
        }
        private void UrlBox_Click(object sender, EventArgs e)
        {
            System.Diagnostics.Process.Start(url);
            closeForm();
        }
    }
}
